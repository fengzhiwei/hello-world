<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADdO62A4TuuvN07rozdO
        6jwAAAAAAAAAAAAAAAA4UOsQAAAAAAAAAAAAAAAAAAAAADVQ6gw4UOsgNVDqDDdO63Q4TupWOE7qhzhO
        6p84Tus+Nk7rVAAAAAAAAAAAOE7rQAAAAAAAAAAAN07rTDdO68M4T+v/OE/r/zdO64E3TurhN07rPDhO
        62A4TuuBAAAAADdO6tcAAAAAAAAAADhO60AAAAAAN07qjTdP6/s4TuqPN03rNjlN6x44TetAOE/r/zhP
        6/84TutgN07qhThQ6yA3T+v7AAAAAAAAAAA4TutAN07rZDdP6vM2T+o8AAAAAAAAAAAAAAAANVDqDDhO
        6+84T+v/OE7rYDhP6584T+v/N07rvwAAAAAAAAAAN0/rRDhO6uc3Tup0AAAAAAAAAAAAAAAAAAAAAAAA
        AAA2T+pYN0/r+zhO6684T+vPN0/r6zZP6zAAAAAAAAAAADhO63g4T+v/NVDqDDVQ7wwAAAAAAAAAAAAA
        AAAAAAAAAAAAADZO7DA3T+pyN0/rdjZO6yQAAAAAAAAAAAAAAAA4TuuhOE7r3zdP6lw3T+vLOE/rUDhO
        63A4TutAOE7rYDhO62A4T+vHNk/qVDdO6uM3TuudAAAAAAAAAAAAAAAAN07rjThO6+84TusgN0/qaAAA
        AAAAAAAAAAAAAAAAAAAAAAAAN0/rYDZO6iA4T+v/OE7rgQAAAAAAAAAAAAAAADdO61Q3T+v7N03rRAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3TepMOE/q9zdO6kwAAAAAAAAAAAAAAAA4TutAN07rnzdP
        68s1UOoMAAAAAAAAAAAAAAAAAAAAAAAAAAA1UOoMN07r1zhO6pc4TutAAAAAAAAAAAAAAAAAOE7rQDZN
        7BQ4TuvXN0/qxzZO7CgAAAAAAAAAAAAAAAA4TuowN0/ryzhO69c1UOoMOE7rQAAAAAAAAAAAAAAAADhO
        61AAAAAAOE3sGDdP67M4T+v/OE7rzzhO6783TurTOE/r/zdP6qs2TewUAAAAADhO6zAAAAAAAAAAAAAA
        AAA4TutAAAAAAAAAAAAAAAAANk7qMDdP6nI4T+t+N0/qcjhO6ygAAAAAAAAAAAAAAAA4TusgAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAP/nAAD/5wAA+DUAAOOVAADvkQAA38MAAN//AACX0wAAn/MAAN/3AADP5wAA588AAPAf
        AAD//wAA//8AAA==
</value>
  </data>
</root>